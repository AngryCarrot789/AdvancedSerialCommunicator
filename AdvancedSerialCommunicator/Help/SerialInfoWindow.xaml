<Window x:Class="AdvancedSerialCommunicator.Help.SerialInfoWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:AdvancedSerialCommunicator.Help" xmlns:serialinfo="clr-namespace:AdvancedSerialCommunicator.Help.SerialInfo"
        mc:Ignorable="d"
        Title="Serial Information" 
        Height="576" Width="1024"
        Style="{DynamicResource CustomToolWindowStyle}">
    <Grid>
        <ListBox Margin="10"
                 HorizontalContentAlignment="Stretch"
                 ScrollViewer.HorizontalScrollBarVisibility="Disabled">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <serialinfo:SerialInfoItem DataContext="{Binding}" Padding="4,2"/>
                </DataTemplate>
            </ListBox.ItemTemplate>
            <ListBox.Items>
                <serialinfo:SerialInfoViewModel Header="Some of this information..."   Information="Could be wrong, but hopefully google isn't wrong. :)"/>
                <serialinfo:SerialInfoViewModel Header="DTR (Data Terminal Ready)"     Information="Data Terminal Ready (DTR) is typically enabled during XON/XOFF software handshaking and Request to Send/Clear to Send (RTS/CTS) hardware handshaking, and modem communications. E.g, Letting a piece of hardware know you're ready to send data"/>
                <serialinfo:SerialInfoViewModel Header="RTS (Ready to Send/Transmit)"  Information="The Request to Transmit (RTS) signal is typically used in Request to Send/Clear to Send (RTS/CTS) hardware handshaking."/>
                <serialinfo:SerialInfoViewModel Header="Break State"                   Information="The break signal state can be used to suspend transmission. The line is placed in a break state (all low, no stop bit) until released. It's not possible to write to the SerialPort object while BreakState is true."/>
                <serialinfo:SerialInfoViewModel Header="Discard Null Characters"       Information="States whether null characters (characters with a binary value of 00000000) are ignored when transmitting data. This should normally be false, but if it's true it can cause errors with UTF32 and UTF16 encoded bytes"/>
                <serialinfo:SerialInfoViewModel Header="Timeouts"       Information="The amount of time the program will wait after trying to send/receive data. In this program, read timeout is useless. Idk why i haven't removed it. eh. Write timeout will halt the program until the data is sent, or it took too long to send, and will display an error message"/>
                <serialinfo:SerialInfoViewModel Header="Buffer Sizes"   Information="The size of the receiving and transmitting buffers, which are there to temporarily hold incomming/outgoing data between ports. If they fill up, an error will be displayed and the port will close"/>
                <serialinfo:SerialInfoViewModel Header="COM Port"       Information="The name of the port to be used for communications, e.g. COM69"/>
                <serialinfo:SerialInfoViewModel Header="Baud Rate"      Information="The number of bits to be sent every second. A lower value may be needed for slower hardware. Computers, e.g. ones running windows, should easily be able to run at 256000 bits per second. An arduino will barely run at 115200 bit per second, normally you use 9600 for those"/>
                <serialinfo:SerialInfoViewModel Header="Data Bits"      Information="The number of bits (of actual data) there are per byte. 8 should be the default, but 5, 6 and 7 are also supported"/>
                <serialinfo:SerialInfoViewModel Header="Stop Bits"      Information="The number of stopbits there are per byte. 1 is the default"/>
                <serialinfo:SerialInfoViewModel Header="Parity"         Information="The parity checking protocol, a technique used for checking if data has been lost or overwritten. it's an extra data bit added to the start of a byte when transmitted, and if the receiver detects that bit isn't right, error occours."/>
                <serialinfo:SerialInfoViewModel Header="Handshake"      Information="The handshaking protocol for transmission of data. When used, the sender is instructed to stop sending data when the read buffer fills to a certain size. When that goes down it can start sending again. If it sends more than the read buffer size, an overflow error occours"/>
            </ListBox.Items>
        </ListBox>
    </Grid>
</Window>

<Window x:Class="AdvancedSerialCommunicator.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:viewmodels="clr-namespace:AdvancedSerialCommunicator.ViewModels"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        xmlns:Converters="clr-namespace:AdvancedSerialCommunicator.Converters"
        xmlns:local="clr-namespace:AdvancedSerialCommunicator" 
        mc:Ignorable="d"
        Title="Advanced Serial Communicator" 
        Height="720" Width="1200"
        MinWidth="1200"
        Closing="Window_Closing"
        Style="{DynamicResource CustomWindowStyle}">
    <Window.Resources>
        <Converters:BoolToColourConverter x:Key="BoolToColourConverter"/>
        <Converters:BoolToCustomStringConverter x:Key="BoolToIsConnectedConverter"/>
        <Style x:Key="ConnectDisconnectButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource ControlDefaultBackground}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ControlDefaultBorderBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource ControlDefaultForeground}"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="true"
                            HorizontalAlignment="Stretch" 
                            VerticalAlignment="Stretch">
                            <ContentPresenter x:Name="contentPresenter" 
                                Focusable="False" 
                                Margin="{TemplateBinding Padding}" 
                                RecognizesAccessKey="True" 
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ControlMouseOverBorderBrush}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Opacity" Value="0.9"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Opacity" Value="0.7"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource ControlBrightDefaultBackground}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ControlBrightDefaultBorderBrush}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource ControlDisabledGlythColour}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Window.DataContext>
        <viewmodels:MainViewModel/>
    </Window.DataContext>
    <Grid>
        <GroupBox DataContext="{Binding Port.Messages, Mode=OneTime}" Header="Messaging" Grid.Row="0" Margin="5,5,5,205">
            <Grid>
                <Grid Margin="0,0,0,35">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="5*" MinWidth="200"/>
                        <ColumnDefinition Width="3"/>
                        <ColumnDefinition Width="3*" MinWidth="180"/>
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Column="0" Margin="0,0,2,0">
                        <Border BorderBrush="{DynamicResource ControlDefaultBorderBrush}" BorderThickness="2" Margin="0,22,0,0">
                            <Grid>
                                <TextBox Background="Transparent" 
                                         BorderBrush="Transparent" 
                                         IsReadOnly="True" 
                                         AcceptsReturn="False" 
                                         AcceptsTab="False"
                                         Text="{Binding ReceivedText}"
                                         VerticalScrollBarVisibility="Visible"
                                         x:Name="receivedBox"/>
                            </Grid>
                        </Border>
                        <Border VerticalAlignment="Top" HorizontalAlignment="Center" Margin="334,0,274,0" CornerRadius="4 4 0 0" BorderBrush="{DynamicResource ControlDefaultBorderBrush}" BorderThickness="2 2 2 0" Background="{DynamicResource BackgroundColour}" Height="24">
                            <TextBlock Text="Received Messages" Padding="7 3 7 3"/>
                        </Border>
                        <Button Command="{Binding ClearReceivedCommand, Mode=OneTime}" Content="Clear" Padding="3" VerticalAlignment="Top" HorizontalAlignment="Left" BorderBrush="{DynamicResource ControlDefaultBorderBrush}" BorderThickness="2 2 2 0" Background="{DynamicResource BackgroundColour}" Width="60"/>
                    </Grid>

                    <GridSplitter Grid.Column="1" Width="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>

                    <Grid Grid.Column="2" Margin="2,0,0,0" >
                        <Border BorderBrush="{DynamicResource ControlDefaultBorderBrush}" BorderThickness="2" Margin="0,22,0,0">
                            <Grid>
                                <TextBox Background="Transparent" 
                                         BorderBrush="Transparent" 
                                         IsReadOnly="True" 
                                         AcceptsReturn="False" 
                                         AcceptsTab="False"
                                         Text="{Binding SentText}"
                                         VerticalScrollBarVisibility="Visible"
                                         x:Name="sentBox"/>
                            </Grid>
                        </Border>
                        <Border VerticalAlignment="Top" HorizontalAlignment="Center" Margin="60 0 0 0" CornerRadius="3 3 0 0" BorderBrush="{DynamicResource ControlDefaultBorderBrush}" BorderThickness="2 2 2 0" Background="{DynamicResource BackgroundColour}">
                            <TextBlock Text="Sent Messages" Padding="7 3 7 3"/>
                        </Border>
                        <Button Command="{Binding ClearSentCommand, Mode=OneTime}" Content="Clear" Padding="3" VerticalAlignment="Top" HorizontalAlignment="Left" BorderBrush="{DynamicResource ControlDefaultBorderBrush}" BorderThickness="2 2 2 0" Background="{DynamicResource BackgroundColour}" Width="60"/>
                    </Grid>
                </Grid>
                <Grid VerticalAlignment="Bottom" Height="32">
                    <Button Command="{Binding SendMessageCommand, Mode=OneTime}" Content="Send" HorizontalAlignment="Left" Width="79" BorderThickness="1 1 0 1"/>
                    <TextBox Text="{Binding ToBeSentMessage, UpdateSourceTrigger=PropertyChanged}" 
                             VerticalContentAlignment="Center" 
                             Padding="5 2 2 2" 
                             FontSize="14" 
                             Margin="79,0,0,0"
                             AcceptsReturn="False"
                             AcceptsTab="False">
                        <TextBox.InputBindings>
                            <KeyBinding Key="Enter" Command="{Binding SendMessageCommand}"/>
                        </TextBox.InputBindings>
                    </TextBox>
                </Grid>
            </Grid>
        </GroupBox>

        <Border Background="{DynamicResource ContainerBackground}" 
                BorderBrush="{DynamicResource ContainerBorder}" 
                Height="200" 
                VerticalAlignment="Bottom" 
                BorderThickness="0 1 0 0"
                DataContext="{Binding Port, Mode=OneTime}">
            <Grid Margin="8">
                <Grid>
                    <Grid HorizontalAlignment="Left" Width="160">
                        <TextBlock Text="Connected To" HorizontalAlignment="Left" VerticalAlignment="Top" Padding="5"/>
                        <TextBlock Text="{Binding ConnectedPort, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top" Padding="5" Margin="83,0,0,0"/>
                        <CheckBox IsChecked="{Binding Settings.DataTerminalReady, UpdateSourceTrigger=PropertyChanged}" Content="DTR Enable" Grid.Column="0" ToolTip="Data Terminal Ready" Margin="0,26,0,137"/>
                        <CheckBox IsChecked="{Binding Settings.RequestToTransmit, UpdateSourceTrigger=PropertyChanged}" Content="RTS Enable" ToolTip="Request To Transmit" Margin="0,46,0,117"/>
                        <Button Content="{Binding IsConnected, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToIsConnectedConverter}, ConverterParameter='Disconnect#Connect'}" 
                                Command="{Binding AutoConnectDisconnectCommand, Mode=OneTime}"
                                Margin="0,71,0,29" 
                                Background="{Binding IsConnected, Converter={StaticResource BoolToColourConverter}}" Style="{DynamicResource ConnectDisconnectButton}"/>
                        <Button Command="{Binding ResetSerialPortCommand, Mode=OneTime}" Content="Reset Serial Port" Margin="0,159,0,0" ToolTip="Fully resets the SerialPort object used by this app, disposing of the old one and releasing all memory it previously used, Allowing a new one to be used. Could possibly fix errors with a previous one such as framing/overrun issues"/>
                    </Grid>

                    <Separator Style="{DynamicResource VerticalSeparator}" HorizontalAlignment="Left" Width="1" Margin="165,0,0,0"/>

                    <Grid Margin="171,0,0,0">
                        <Grid HorizontalAlignment="Left" Width="400">
                            <Grid HorizontalAlignment="Left" Width="170">
                                <TextBlock Text="Sent Messages:" Padding="5" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                                <TextBlock Text="{Binding Messages.MessagesSent}" Padding="5" VerticalAlignment="Top" Margin="120,0,0,0"/>
                                <TextBlock Text="Received Messages:" Padding="5" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,26,0,0"/>
                                <TextBlock Text="{Binding Messages.MessagesReceived}" Padding="5" VerticalAlignment="Top" Margin="120,26,0,0"/>

                                <Grid HorizontalAlignment="Stretch" Margin="0,57,0,0" Height="28" VerticalAlignment="Top">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <Button Command="{Binding Messages.ClearSentCommand, Mode=OneTime}" Content="Clear Sent" Margin="0,0,2,0"/>
                                    <Button Command="{Binding Messages.ClearReceivedCommand, Mode=OneTime}" Content="Clear Received" Grid.Column="1" Margin="2,0,0,0"/>
                                </Grid>

                                <Separator VerticalAlignment="Top" Margin="0,90,0,0"/>

                                <Grid Margin="0,95,0,0">
                                    <TextBlock Padding="5" VerticalAlignment="Top" HorizontalAlignment="Center" Text="Receiver Thread Settings" ToolTip="Receiving of text is done on another thread to increase reliability and speed. Click the button to disable receiving text (idk why you'd want that but anyway)"/>

                                    <TextBlock Padding="5" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,26,0,0" Text="Is Running: "/>
                                    <TextBlock Text="{Binding IsReceiveThreadActive, UpdateSourceTrigger=PropertyChanged}" Padding="0 5 5 5" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="72,26,0,0"/>
                                    <Button Command="{Binding AutoStartStopReceiverCommand, Mode=OneTime}" Content="{Binding IsReceiveThreadActive, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToIsConnectedConverter}, ConverterParameter='Stop#Start'}"  Margin="0,52,0,0"/>
                                </Grid>
                            </Grid>

                            <Separator Style="{DynamicResource VerticalSeparator}" HorizontalAlignment="Left" Width="1" Margin="175,0,0,0"/>

                            <Grid Margin="181,0,0,0">
                                <TextBlock Text="Timeouts" VerticalAlignment="Top" HorizontalAlignment="Center" Padding="5"/>
                                <TextBlock Text="Read" Padding="5" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,26,0,0"/>
                                <TextBlock Text="Write" Padding="5" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,57,0,0"/>

                                <Separator VerticalAlignment="Bottom" HorizontalAlignment="Stretch" Margin="0,0,0,87"/>

                                <TextBlock Padding="5" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,0,0,57" Text="Buffer Sizes"/>
                                <TextBlock Padding="5" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="0,0,0,31" Text="Read"/>
                                <TextBlock Padding="5" HorizontalAlignment="Left" VerticalAlignment="Bottom" Text="Write"/>

                                <Slider Value="{Binding Settings.ReadTimeout, UpdateSourceTrigger=PropertyChanged}" Minimum="100" Maximum="10000" VerticalAlignment="Top" Margin="41,26,0,0" TickPlacement="BottomRight" TickFrequency="200" IsSnapToTickEnabled="False"/>
                                <Slider Value="{Binding Settings.WriteTimeout, UpdateSourceTrigger=PropertyChanged}" Minimum="100" Maximum="10000" VerticalAlignment="Top" Margin="41,57,0,0" TickPlacement="BottomRight" TickFrequency="200" IsSnapToTickEnabled="False"/>
                                <Slider Value="{Binding Settings.ReadBufferSize, UpdateSourceTrigger=PropertyChanged}" Minimum="100" Maximum="10000" VerticalAlignment="Bottom" Margin="41,0,50,31" TickPlacement="BottomRight" TickFrequency="200" IsSnapToTickEnabled="False"/>
                                <Slider Value="{Binding Settings.WriteBufferSize, UpdateSourceTrigger=PropertyChanged}" Minimum="100" Maximum="10000" VerticalAlignment="Bottom" Margin="41,0,48,0" TickPlacement="BottomRight" TickFrequency="200" IsSnapToTickEnabled="False"/>

                                <Button Command="{Binding ClearBuffersCommand}" CommandParameter="r" Content="Clear" Margin="0,126,0,31" HorizontalAlignment="Right" Width="48" ToolTip="Clear Read/Receive Buffers"/>
                                <Button Command="{Binding ClearBuffersCommand}" CommandParameter="w" Content="Clear" Margin="0,157,0,0" HorizontalAlignment="Right" Width="48" ToolTip="Clear Write/Transmit Buffers"/>
                            </Grid>
                        </Grid>

                        <Separator Style="{DynamicResource VerticalSeparator}" HorizontalAlignment="Left" Width="1" Margin="405,0,0,0"/>

                        <Grid DataContext="{Binding Settings, Mode=OneTime}" Margin="411,0,0,0">
                            <Grid.Resources>
                                <x:Array x:Key="baudRates" Type="{x:Type system:String}">
                                    <system:String>110</system:String>
                                    <system:String>330</system:String>
                                    <system:String>600</system:String>
                                    <system:String>1200</system:String>
                                    <system:String>2400</system:String>
                                    <system:String>4800</system:String>
                                    <system:String>9600</system:String>
                                    <system:String>19200</system:String>
                                    <system:String>38400</system:String>
                                    <system:String>57600</system:String>
                                    <system:String>74800</system:String>
                                    <system:String>115200</system:String>
                                    <system:String>128000</system:String>
                                    <system:String>256000</system:String>
                                </x:Array>
                                <x:Array x:Key="dataBits" Type="{x:Type system:String}">
                                    <system:String>5</system:String>
                                    <system:String>6</system:String>
                                    <system:String>7</system:String>
                                    <system:String>8</system:String>
                                </x:Array>
                                <x:Array x:Key="stopBits" Type="{x:Type system:String}">
                                    <system:String>One</system:String>
                                    <system:String>OnePointFive</system:String>
                                    <system:String>Two</system:String>
                                </x:Array>
                                <x:Array x:Key="parities" Type="{x:Type system:String}">
                                    <system:String>None</system:String>
                                    <system:String>Odd</system:String>
                                    <system:String>Even</system:String>
                                    <system:String>Mark</system:String>
                                    <system:String>Space</system:String>
                                </x:Array>
                                <x:Array x:Key="handshakes" Type="{x:Type system:String}">
                                    <system:String>None</system:String>
                                    <system:String>XOnXOff</system:String>
                                    <system:String>RequestToSend</system:String>
                                    <system:String>RequestToSendXOnXOff</system:String>
                                </x:Array>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="120*"/>
                                <ColumnDefinition Width="5"/>
                                <ColumnDefinition Width="110*"/>
                                <ColumnDefinition Width="5"/>
                                <ColumnDefinition Width="100*"/>
                                <ColumnDefinition Width="5"/>
                                <ColumnDefinition Width="115*"/>
                                <ColumnDefinition Width="5"/>
                                <ColumnDefinition Width="100*"/>
                                <ColumnDefinition Width="5"/>
                                <ColumnDefinition Width="185*"/>
                            </Grid.ColumnDefinitions>
                            <Grid Grid.Column="0">
                                <TextBlock Text="COM Ports" Padding="5" HorizontalAlignment="Center" VerticalAlignment="Top"/>
                                <ListBox VerticalAlignment="Stretch" 
                                         Margin="0,26,0,24" 
                                         ItemsSource="{Binding AvaliableCOMPorts, Mode=OneTime}"
                                         SelectedItem="{Binding SelectedCOMPort, UpdateSourceTrigger=PropertyChanged}">
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding}" Padding="4,3"/>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                                <Button Content="Refresh" 
                                        BorderThickness="1 0 1 1" 
                                        VerticalAlignment="Bottom" 
                                        Height="24" 
                                        BorderBrush="{DynamicResource ControlBrightDefaultBorderBrush}"
                                        Command="{Binding RefreshCOMPortsCommand, Mode=OneTime}"/>
                            </Grid>

                            <Grid Grid.Column="2">
                                <TextBlock Text="Baud Rate" Padding="5" HorizontalAlignment="Center" VerticalAlignment="Top"/>
                                <ListBox VerticalAlignment="Stretch" 
                                         Margin="0,26,0,0" 
                                         ItemsSource="{StaticResource baudRates}"
                                         SelectedItem="{Binding SelectedBaudRate, UpdateSourceTrigger=PropertyChanged}">
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding}" Padding="4,3"/>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                            </Grid>

                            <Grid Grid.Column="4">
                                <TextBlock Text="Data Bits" Padding="5" HorizontalAlignment="Center" VerticalAlignment="Top"/>
                                <ListBox VerticalAlignment="Stretch" 
                                         Margin="0,26,0,0" 
                                         ItemsSource="{StaticResource dataBits}"
                                         SelectedItem="{Binding SelectedDataBits, UpdateSourceTrigger=PropertyChanged}"/>
                            </Grid>

                            <Grid Grid.Column="6">
                                <TextBlock Text="Stop Bits" Padding="5" HorizontalAlignment="Center" VerticalAlignment="Top"/>
                                <ListBox VerticalAlignment="Stretch" 
                                         Margin="0,26,0,0" 
                                         ItemsSource="{StaticResource stopBits}"
                                         SelectedItem="{Binding SelectedStopBits, UpdateSourceTrigger=PropertyChanged}">
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding}" Padding="4,3"/>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                            </Grid>

                            <Grid Grid.Column="8">
                                <TextBlock Text="Parity" Padding="5" HorizontalAlignment="Center" VerticalAlignment="Top"/>
                                <ListBox VerticalAlignment="Stretch" 
                                         Margin="0,26,0,0" 
                                         ItemsSource="{StaticResource parities}"
                                         SelectedItem="{Binding SelectedParity, UpdateSourceTrigger=PropertyChanged}">
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding}" Padding="4,3"/>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                            </Grid>

                            <Grid Grid.Column="10">
                                <TextBlock Text="Handshake" Padding="5" HorizontalAlignment="Center" VerticalAlignment="Top"/>
                                <ListBox VerticalAlignment="Stretch" 
                                         Margin="0,26,0,0" 
                                         ItemsSource="{StaticResource handshakes}"
                                         SelectedItem="{Binding SelectedHandshake, UpdateSourceTrigger=PropertyChanged}">
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding}" Padding="4,3"/>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                            </Grid>
                        </Grid>
                    </Grid>
                </Grid>
            </Grid>
        </Border>
    </Grid>
</Window>
